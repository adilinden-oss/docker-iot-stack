services:

  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: mosquitto
    volumes:
      - ${PWD}/volumes/mosquitto/config:/mosquitto/config
      - ${PWD}/volumes/mosquitto/data:/mosquitto/data
    ports:
      - "1883:1883"
      #- "9001:9001"
    restart: unless-stopped

  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    depends_on:
      - mosquitto
    user: 0:0
    environment:
      - TZ=${TZ:-America/Winnipeg}
    ports:
      - "1880:1880"
    volumes:
      - ${PWD}/volumes/node-red/data:/data
    restart: unless-stopped

  zigbee2mqtt:
    image: koenkk/zigbee2mqtt:latest
    container_name: zigbee2mqtt
    depends_on:
      - mosquitto
    environment:
      - TZ=${TZ:-America/Winnipeg}
      - ZIGBEE2MQTT_CONFIG_MQTT_SERVER=${ZIGBEE2MQTT_CONFIG_MQTT_SERVER}
      - ZIGBEE2MQTT_CONFIG_MQTT_USER=${ZIGBEE2MQTT_CONFIG_MQTT_USER}
      - ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD=${ZIGBEE2MQTT_CONFIG_MQTT_PASSWORD}
      - ZIGBEE2MQTT_CONFIG_ADVANCED_LOG_SYMLINK_CURRENT=true
    ports:
      - "8080:8080"
    volumes:
      - ${PWD}/volumes/zigbee2mqtt/data:/app/data
      - /run/udev:/run/udev:ro
    devices:
      - /dev/serial/by-id/usb-Silicon_Labs_Sonoff_Zigbee_3.0_USB_Dongle_Plus_0001-if00-port0:/dev/ttyACM0
    group_add:
      - dialout
    restart: unless-stopped

  rtl433:
    image: hertzg/rtl_433:latest
    container_name: rtl433
    depends_on:
      - mosquitto
    command:
      - "-Csi"
      - "-Mtime:unix:usec:utc"
      - "-Mbits"
      - "-Mlevel"
      - "-Mprotocol"
      - "-Mstats:2:300"
      - "-F${RTL433_MQTT_SERVER},\
          retain=1,\
          user=${RTL433_MQTT_USER},\
          pass=${RTL433_MQTT_PASSWORD},\
          events=rtl_433/iot-br-1/events,\
          states=rtl_433/iot-br-1/states,\
          devices=rtl_433/iot-br-1/devices[/type][/model][/subtype][/channel][/id]"
    devices:
      - "/dev/bus/usb/002/002"
    restart: unless-stopped

  ts-caddy:
    image: tailscale/tailscale
    container_name: ts-caddy
    hostname: iot-stack
    environment:
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_AUTH_KEY=${TS_AUTH_KEY}
    volumes:
      - /dev/net/tun:/dev/net/tun
      - ${PWD}/volumes/ts-caddy/lib:/var/lib
      # tailscaled.sock shared with caddy
      - ${PWD}/volumes/ts-caddy/run:/tmp
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  caddy:
    image: caddy:latest
    container_name: caddy
    depends_on:
      - ts-caddy
    environment:
      - CADDY_CERT_DOMAIN=${CADDY_CERT_DOMAIN}
      - CADDY_UPSTREAM1=${CADDY_UPSTREAM1}
      - CADDY_UPSTREAM2=${CADDY_UPSTREAM2}
      - CADDY_UPSTREAM3=${CADDY_UPSTREAM3}
      - CADDY_UPSTREAM4=${CADDY_UPSTREAM4}
      - CADDY_UPSTREAM5=${CADDY_UPSTREAM5}
      - CADDY_LABEL1=${CADDY_LABEL1}
      - CADDY_LABEL2=${CADDY_LABEL2}
      - CADDY_LABEL3=${CADDY_LABEL3}
      - CADDY_LABEL4=${CADDY_LABEL4}
      - CADDY_LABEL5=${CADDY_LABEL5}
    volumes:
      - ${PWD}/config/caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${PWD}/volumes/caddy/data:/data
      - ${PWD}/volumes/caddy/config:/config
      # tailscaled.sock shared with caddy
      - ${PWD}/volumes/ts-caddy/run:/var/run/tailscale
    network_mode: service:ts-caddy
    restart: unless-stopped

